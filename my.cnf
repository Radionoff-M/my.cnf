### Этот файл my.cnf основан на следующем сообщении в блоге speedemy.com:
### http://www.speedemy.com/17-key-mysql-config-file-settings-mysql-5-7-proof

[клиент]

###
### клиентская секция - используется для "mysql", "mysqladmin" и аналогичной командной строки
### клиенты.
###

#port = 3306
#socket = /tmp/mysql.sock
### На всякий случай, если ваша текущая конфигурация не использует значения по умолчанию.

[mysqld]

###
### Раздел mysqld - используется сервером MySQL (также относится к серверу Percona,
### MariaDB и т. Д.)
###

#port = 3306
#socket = /tmp/mysql.sock
#user = mysql
### На всякий случай, если ваша текущая конфигурация не использует значения по умолчанию.

datadir = / вар / библиотека / mysql
### Это должно указывать на основной каталог данных MySQL.


###
### Общие параметры сервера:
###

max_allowed_packet = 32 млн
### Предел пакетов по умолчанию почти всегда слишком мал.

max_connections = 2000
### Также максимальное количество подключений (спящие потоки могут быть)

#table_open_cache = 2000
### Открытый кеш таблицы - значения по умолчанию хороши только в MySQL 5.7 и 5.6
### На 5.1 или 5.5 установите вышеуказанное.

#table_open_cache_instances = 16
### Табличные экземпляры открытого кеша - обязательно установите это в MySQL 5.6.
### http://www.speedemy.com/17-key-mysql-config-file-settings-mysql-5-7-proof#table_open_cache_instances

open_files_limit = 10000
### Увеличьте количество файловых дескрипторов, мы сейчас не в каменном веке.

tmp_table_size = 64 млн
max_heap_table_size = 64 млн
### Увеличить пределы для неявных и явных временных таблиц.

tmpdir = / tmp
### Не используйте tmpfs для tmpdir, иначе AIO будет отключен. И убедитесь
### Достаточно места для временных таблиц и файлов (обычно 2-5 ГБ)

#thread_cache_size = 100
### Кэш потоков - теперь размер автоматически изменен в MySQL 5.6 и 5.7
### Но в MySQL 5.1 и 5.5 установите указанное выше

default_storage_engine = InnoDB
### Механизм хранения по умолчанию в большинстве случаев должен быть InnoDB. Если сомневаешься:
### http://www.speedemy.com/17-key-mysql-config-file-settings-mysql-5-7-proof#default_storage_engine

skip_name_resolve
### Отключение разрешения DNS - логины на основе DNS перестанут работать:
### http://www.speedemy.com/17-key-mysql-config-file-settings-mysql-5-7-proof#skip_name_resolve

query_cache_type = 0
query_cache_size = 0
### Явное отключение кеша запросов. Если у вас небольшая нагрузка, вы
### может пересмотреть:
### http://www.speedemy.com/17-key-mysql-config-file-settings-mysql-5-7-proof#query_cache_type

#back_log = 512
### Попробуйте увеличить это значение, если у вас много новых подключений.
### (> 1000 / сек), и вы используете MySQL 5.6 или более раннюю версию
### https://www.percona.com/blog/2011/04/19/mysql-connection-timeouts/

#thread_concurrency = 0
### Не настраивайте это. Это ничего не делает. И я включил это только сюда
###, потому что я видел слишком много людей, одержимых этим.

#join_buffer_size = 256 КБ
#sort_buffer_size = 256 КБ
#read_buffer_size = 128 КБ
#read_rnd_buffer_size = 256 КБ
### Оставьте для них значения по умолчанию, не меняйте для них общесерверные настройки
### Вместо этого используйте переменную сеанса, когда она вам действительно нужна:
### mysql> УСТАНОВИТЬ сеанс read_buffer_size = 2 * 1024 * 1024;
### mysql> ЗАПУСТИТЬ ЗАПРОС;


###
### Раздел двоичного журнала
###

log_bin
server_id = 1
### Включение binlog, а также уникального server_id для
### восстановление на определенный момент времени и, возможно, репликация.

max_binlog_size = 100 МБ
### Не создавайте больших двоичных журналов, в файловых системах вроде ext3 это может
### вызывают срывы.

#master_info_repository = ТАБЛИЦА
#relay_log_info_repository = ТАБЛИЦА
### Если вы используете MySQL 5.6 или MySQL 5.7, сохраните позицию двоичного журнала
### в ТАБЛИЦУ, а не в ФАЙЛ (в этом случае позиция синхронизируется с db)

expire_logs_days = 7
### Контроль количества бинарных журналов, которые сервер может хранить (в днях)

sync_binlog = 0
### Отключение sync-binlog для повышения производительности, но примите во внимание
### проблемы с долговечностью:
### http://www.speedemy.com/17-key-mysql-config-file-settings-mysql-5-7-proof#sync_binlog

binlog_format = СМЕШАННЫЙ
### Для двоичного формата журнала я рекомендую MIXED, но решать вам.

###
### Особые параметры MyISAM:
###

### Предполагая, что MyISAM не будет использоваться, поэтому для MyISAM используются значения по умолчанию
### Тем не менее, если вы планируете его использовать, это, вероятно, единственная переменная, которую вы
### хочу настроить:
#key_buffer_size = 128 МБ


###
### Специальные параметры InnoDB:
###

#innodb_buffer_pool_size = 96 ГБ
### Установите размер буферного пула innodb на 75-80% от общей памяти (выделенной):
### http://www.speedemy.com/17-key-mysql-config-file-settings-mysql-5-7-proof#innodb_buffer_pool_size
### Приведенный выше пример будет использоваться на выделенном сервере MySQL 128 ГБ.

#innodb_log_file_size = 2047 млн
### Разрешить буферизацию 1-2 часов записи в журналах транзакций:
### http://www.speedemy.com/17-key-mysql-config-file-settings-mysql-5-7-proof#innodb_log_file_size
### Вспомогательная команда:
### mysql> пейджер grep seq
### mysql> показать статус innodb движка \ G select sleep (60); показать статус innodb двигателя \ G

innodb_log_buffer_size = 16 млн
### Не переживайте, просто установите значение 16M.

innodb_flush_log_at_trx_commit = 0
### Это OTOH действительно важно. Видеть:
### http://www.speedemy.com/17-key-mysql-config-file-settings-mysql-5-7-proof#innodb_flush_log_at_trx_commit

innodb_flush_method = O_DIRECT
### В Linux просто оставьте значение O_DIRECT.
### http://www.speedemy.com/17-key-mysql-config-file-settings-mysql-5-7-proof#innodb_flush_method

#innodb_buffer_pool_instances = 4
### Установите это в зависимости от версии MySQL. Доступно с версии 5.6
### В 5.6 установлен на 4
### В 5.7 установлен на 8
### http://www.speedemy.com/17-key-mysql-config-file-settings-mysql-5-7-proof#innodb_buffer_pool_instances

innodb_thread_concurrency = 8
### Да, это не ошибка. Используйте 0 только для тестов, и если вас нигде нет
### рядом с насыщением вашего сервера.
### http://www.speedemy.com/17-key-mysql-config-file-settings-mysql-5-7-proof#innodb_thread_concurrency

#innodb_io_capacity = 1000
#innodb_io_capacity_max = 3000
### Базируйте их на своем сервере, радом пишите возможности ввода-вывода
### http://www.speedemy.com/17-key-mysql-config-file-settings-mysql-5-7-proof#innodb_io_capacity

innodb_stats_on_metadata = 0
### В 5.6 и 5.7 это уже отключено по умолчанию.
### http://www.speedemy.com/17-key-mysql-config-file-settings-mysql-5-7-proof#innodb_stats_on_metadata

#innodb_buffer_pool_dump_at_shutdown = 1 # MySQL 5.6+
#innodb_buffer_pool_load_at_startup = 1 # MySQL 5.6+
#innodb_buffer_pool_dump_pct = 75 # только MySQL 5.7
### Включите их для более быстрого разогрева
### http://www.speedemy.com/17-key-mysql-config-file-settings-mysql-5-7-proof#innodb_buffer_pool_dump_at_shutdown

#innodb_adaptive_hash_index_parts = 16 # только MySQL 5.7
#innodb_adaptive_hash_index_partitions = 16 # Только сервер Percona
### AHI - обычное узкое место, однако несколько версий MySQL
### поддержка разделов AHI:
### http://www.speedemy.com/17-key-mysql-config-file-settings-mysql-5-7-proof#innodb_adaptive_hash_index_parts

#innodb_checksum_algorithm = crc32 # MySQL 5.6 или новее
### Аппаратное ускорение контрольных сумм
### http://www.speedemy.com/17-key-mysql-config-file-settings-mysql-5-7-proof#innodb_checksum_algorithm

innodb_read_io_threads = 16
innodb_write_io_threads = 16
### Это не очень важно для точной настройки, но это хорошо
### это количество доступных шпинделей чтения / записи
### http://www.speedemy.com/17-key-mysql-config-file-settings-mysql-5-7-proof#innodb_read_io_threads

innodb_file_per_table
### Существует ряд причин использовать файл для таблицы, но помните, что
### он не преобразует таблицы автоматически, и ibdata1 никогда не сжимается

#innodb_open_files = 3000
### Установите это в MySQL 5.1 и 5.5. В версии 5.6 и выше он настраивается автоматически
### указывает максимальное количество файлов .ibd, которые MySQL может держать открытыми одновременно.

#innodb_flush_neighbors = 0
### Установите 0, если вы используете SSD. Для магнитных приводов оставьте значение 1
### http://dev.mysql.com/doc/refman/5.7/en/innodb-parameters.html#sysvar_innodb_flush_neighbors

#innodb_flushing_avg_loops = 100
### Используйте это, если вам не нравится, как ведет себя промывка
### (например, если у вас киоски)
### http://dev.mysql.com/doc/refman/5.7/en/innodb-parameters.html#sysvar_innodb_flushing_avg_loops

#innodb_page_cleaners = 8 # только MySQL 5.7
### В среде с большим объемом записи используйте это, чтобы получить еще больший контроль
### над промывкой. Это еще не слишком дико проверено.
### http://dev.mysql.com/doc/refman/5.7/en/innodb-parameters.html#sysvar_innodb_page_cleaners

#innodb_old_blocks_time = 1000
### Используйте это только в 5.1 и 5.5, так как 5.6 и 5.7 уже имеют 1000 по умолчанию
### Это в основном защищает ваш буферный пул от случайных сканирований.
### Хотя способ его работы довольно сложен, определенно не для my.cnf

#innodb_max_dirty_pages_pct
### Если вы находитесь в среде с большим объемом записи, но хотите ограничить ее объем
### вы используете для грязных страниц, это переменная для настройки. По умолчанию
### зависит от версии, но диапазон составляет 75-90%


###
### Медленный журнал запросов (в основном для Percona XtraDB)
###

long_query_time = 1.0
### Журнал запросов, выполнение которых занимает> 1 с.

slow_query_log = 1
### Включить медленное ведение журнала запросов

### Только для использования на Percona Server:

#log_slow_slave_statements = ВКЛ
#log_slow_verbosity = full
#slow_query_log_timestamp_always = ВКЛ
#slow_query_log_timestamp_precision = микросекунда
#slow_query_log_use_global_control = все
### Смотрите здесь для получения дополнительной информации:
### https://www.percona.com/doc/percona-server/5.6/diagnostics/slow_extended.html
